"""
Helgason et al. (2012)
"""
name = 'Helgason et al. (2012)'
name_short = 'H12'
year = 2012
link = 'https://ui.adsabs.harvard.edu/abs/2012ApJ...752..113H/abstract'
style = \
{
 'color': 'orange',
 'edgecolor': 'orange',
 'facecolor': 'none',
 'hatch': '/',
 'label': name,
}
bibtex = \
"""
@ARTICLE{2012ApJ...752..113H,
       author = {{Helgason}, Kari and {Ricotti}, Massimo and {Kashlinsky}, Alexander},
        title = "{Reconstructing the Near-infrared Background Fluctuations from Known Galaxy Populations Using Multiband Measurements of Luminosity Functions}",
      journal = {\apj},
     keywords = {galaxies: luminosity function, mass function, infrared: diffuse background, infrared: galaxies, large-scale structure of universe, Astrophysics - Cosmology and Nongalactic Astrophysics},
         year = 2012,
        month = jun,
       volume = {752},
       number = {2},
          eid = {113},
        pages = {113},
          doi = {10.1088/0004-637X/752/2/113},
archivePrefix = {arXiv},
       eprint = {1201.4398},
 primaryClass = {astro-ph.CO},
       adsurl = {https://ui.adsabs.harvard.edu/abs/2012ApJ...752..113H},
      adsnote = {Provided by the SAO/NASA Astrophysics Data System}
}

"""
notes = \
"""
Notes:
- Mean EBL results in Table 3.
"""

model_type = 'empirical'

# Table 2
lf_cols = ['l_eff', 'N', 'zmax', 'Mstar', 'q', 'pstar', 'p', 'alpha', 'r']
lf_fits = \
{
 'UV': [0.15, 24, 8.0, -19.62, 1.1, 2.43, 0.2, -1.00, 0.086],
 'U':  [0.36, 27, 4.5, -20.20, 1.0, 5.46, 0.5, -1.00, 0.076],
 'B':  [0.45, 44, 4.5, -21.35, 0.6, 3.41, 0.4, -1.00, 0.055],
 'V':  [0.55, 18, 3.6, -22.13, 0.5, 2.42, 0.5, -1.00, 0.060],
 'R':  [0.65, 25, 3.0, -22.40, 0.5, 2.25, 0.5, -1.00, 0.070],
 'I':  [0.79, 17, 3.0, -22.80, 0.4, 2.05, 0.4, -1.00, 0.070],
 'z':  [0.91, 7,  2.9, -22.86, 0.4, 2.55, 0.4, -1.00, 0.060],
 'J':  [1.27, 15, 3.2, -23.04, 0.4, 2.21, 0.6, -1.00, 0.035],
 'H':  [1.63, 6,  3.2, -23.41, 0.5, 1.91, 0.8, -1.00, 0.035],
 'K':  [2.20, 38, 3.8, -22.97, 0.4, 2.74, 0.8, -1.00, 0.035],
 'L':  [3.60, 6,  0.7, -22.40, 0.2, 3.29, 0.8, -1.00, 0.035],
 'M':  [4.50, 6,  0.7, -21.84, 0.3, 3.29, 0.8, -1.00, 0.035],
}

bands = lf_fits.keys()
waves = [lf_fits[key][0] for key in lf_fits.keys()]

# Table 3
#masking_depth = [22, 24, 26, 28, None] # cols

data_ebl = \
{

}

# Final 3-element tuple is (best-fit EBL +/- err)
mean_ebl = {}
mean_ebl['B'] = (3.33, 1.72, -0.82), (2.26, 1.56, -0.71), (1.17, 1.24, -0.50),\
    (0.52, 0.88, -0.29), (4.92, 1.81, -0.88)
mean_ebl['V'] = (2.95, 1.54, -0.73), (1.90, 1.36, -0.61), (0.96, 1.05, -0.41),\
    (0.42, 0.73, -0.23), (5.65, 1.73, -0.85)
mean_ebl['R'] = (2.86, 1.54, -0.73), (1.75, 1.31, -0.58), (0.85, 0.98, -0.38),\
    (0.37, 0.67, -0.21), (6.56, 1.82, -0.92)
mean_ebl['I'] = (2.81, 1.58, -0.76), (1.58, 1.27, -0.55), (0.72, 0.92, -0.34),\
    (0.30, 0.61, -0.17), (7.97, 2.01, -1.06)
mean_ebl['J'] = (2.59, 1.56, -0.77), (1.20, 1.10, -0.47), (0.48, 0.72, -0.25),\
    (0.18, 0.45, -0.12), (9.60, 2.40, -1.28)
mean_ebl['H'] = (2.25, 1.50, -0.71), (0.96, 0.96, -0.40), (0.36, 0.57, -0.19),\
    (0.13, 0.34, -0.09), (9.34, 2.59, -1.29)
mean_ebl['K'] = (1.74, 1.41, -0.60), (0.69, 0.82, -0.30), (0.24, 0.44, -0.13),\
    (0.08, 0.23, -0.06), (8.09, 2.52, -1.14)
mean_ebl['L'] = (0.98, 1.05, -0.40), (0.34, 0.57, -0.17), (0.11, 0.27, -0.06),\
    (0.03, 0.12, -0.02), (4.87, 1.72, -0.71)
mean_ebl['M'] = (0.75, 0.83, -0.31), (0.24, 0.45, -0.13), (0.07, 0.20, -0.04),\
    (0.02, 0.09, -0.02), (3.28, 1.21, -0.49)


masking_depth = [17 + i * 0.5 for i in range(23)]

data_shot = \
{
 'waves': [2.4, 3.6, 4.5],
 'mean': [[6.467984712405889e-7,4.504695153375135e-7,2.9981694495921137e-7,
    1.935828380992012e-7,1.1936097695257987e-7,7.321298528732544e-8,
    4.266079451119532e-8,2.3572793607603913e-8,1.2944489582582967e-8,
    6.978930128929541e-9,3.7372521288598096e-9,1.939764309994883e-9,
    9.768255854128683e-10,5.016154443278482e-10,2.527983686817648e-10,
    1.2532365306328433e-10,6.123844980940014e-11,2.831743262485589e-11,
    1.3684274467055962e-11,6.5916914265500135e-12,3.1977263620894444e-12,
    1.5713855324467929e-12,7.40921942138912e-13],
         [3.3993624254984544e-7,2.5634552672080107e-7,1.8772215548097614e-7,
    1.331844580890311e-7,9.110471115204177e-8,6.03072750503796e-8,
    3.7446007338875e-8,2.178057049802666e-8,1.154565497301104e-8,
    6.130440427828268e-9,3.217350200290159e-9,1.653566198101232e-9,
    8.403483238672079e-10,4.1379144357769e-10,2.0033523133606422e-10,
    9.697522143353995e-11,4.7723207559286915e-11,2.23140550880042e-11,
    9.931241914816678e-12,4.67580200688697e-12,2.2594336615509955e-12,
    1.0684892502229129e-12,5.143812617340099e-13,2.450418841229101e-13],
         [1.6048388443181758e-7,1.2650313809247726e-7,9.65651318590044e-8,
    7.11151535417021e-8,4.994210623382606e-8,3.3612666558245505e-8,
    2.1714867836880027e-8,1.3230230436473008e-8,7.308671303256053e-9,
    3.9471062242105075e-9,2.0914267951788054e-9,1.0477237240519387e-9,
    5.228200225942202e-10,2.4955012340998683e-10,1.1937216204310324e-10,
    5.7487819579739977e-11,2.6729858990364684e-11,1.2556337225252953e-11,
    5.50054968758432e-12,2.5233175622978497e-12,1.1950336513033673e-12,
    5.552335330569451e-13,2.627158947650673e-13,1.2564908659897153e-13]
 ],
}

hi_24 = [7.129240824895805e-7, 5.035914858909901e-7, 3.5447997053809227e-7,
   2.3199740322653805e-7, 1.5126888442469708e-7, 9.522407932130075e-8,
   5.7111409372763294e-8, 3.3696141770975504e-8, 1.887645399363034e-8,
   1.0371754248596334e-8, 5.561388132923731e-9, 2.994468062899303e-9,
   1.548061245075317e-9, 8.690227011765004e-10, 4.566595852430586e-10,
   2.419001034683697e-10, 1.1938082737134635e-10, 5.892647917372239e-11,
   3.000378221912056e-11, 1.539918523662524e-11, 7.937840201604168e-12,
   4.137179938047659e-12, 2.2500898613527656e-12]

lo_24 = [6.093225924539433e-7,4.1581178396737375e-7,2.72282889329154e-7,
   1.6675370429660428e-7,1.0501545482270756e-7,5.977666778054736e-8,
   3.526656883362129e-8,1.8791444502320325e-8,1.0436634049153463e-8,
   5.275689810411908e-9,2.637549387559166e-9,1.3130784188982841e-9,
   6.622612380443108e-10,3.172152946696769e-10,1.5312910702903699e-10,
   7.20475002892127e-11,3.568965833414656e-11,1.507881153784306e-11,
   6.804900467317117e-12,3.1537814099501426e-12,1.4900411012958657e-12,
   6.820518277624818e-13,3.12146973009152e-13]

hi_36 = [3.3641384446676603e-7,2.5445145188065775e-7,1.9504114004688106e-7,
   1.4932787194564273e-7,1.0623634599360777e-7,7.271933911257862e-8,
   4.645432380837434e-8,2.8839622916569016e-8,1.6173446729617576e-8,
   9.306747906500664e-9,5.154453470119005e-9,2.781482726347223e-9,
   1.4613474341628973e-9,7.68152996051771e-10,4.069525092257327e-10,
   2.0837157855068334e-10,1.0787235615680095e-10,5.4063526961657024e-11,
   2.5972552617950406e-11,1.2908921411598098e-11,6.663942145226126e-12,
   3.421528816925825e-12,1.7081009516161272e-12,9.034870828389076e-13]

lo_36 = [3.3320548296346866e-7,2.4226444692488044e-7,1.7812158038793312e-7,
   1.2679499489192516e-7,8.708886951295939e-8,5.443692383299118e-8,
   3.094348174128333e-8,1.7377904026469122e-8,8.938123372731245e-9,
   4.552238505302587e-9,2.3038453153173073e-9,1.1127967628743467e-9,
   5.418620203751956e-10,2.5025434894007747e-10,1.1789286110928988e-10,
   5.330751702688388e-11,2.556245490905112e-11,1.1447366731736854e-11,
   4.790169568031183e-12,2.225982704935865e-12,9.931903977055944e-13,
   4.441774709820906e-13,2.036917286784595e-13,1.0348237574230419e-13]

hi_45 = [1.6076459500633807e-7,1.270729083348893e-7,9.713738853120523e-8,
   7.029141155248022e-8,5.5727035110854896e-8,3.9194145145680446e-8,
   2.6533054765031612e-8,1.6676872145547693e-8,9.843616718604884e-9,
   5.539228145999306e-9,3.0546488439494084e-9,1.657807334265958e-9,
   9.042978257945922e-10,4.610047793104259e-10,2.469470771981119e-10,
   1.2660635075620822e-10,6.489312156977304e-11,3.263362435969622e-11,
   1.5551926267523743e-11,7.763728372464716e-12,3.988313994830216e-12,
   2.0089948709882725e-12,1.0283565763217511e-12,5.592680967085342e-13]

lo_45 = [1.622700315853036e-7,1.264820846238798e-7,9.654906086660189e-8,
   6.965088497141941e-8,4.7328101974766265e-8,3.2498658622747294e-8,
   2.034839911298952e-8,1.1318817554603403e-8,5.7784241341292504e-9,
   2.967206115811106e-9,1.4645983487197432e-9,6.999487598195643e-10,
   3.2334637695071337e-10,1.4492729443500362e-10,6.50661651727031e-11,
   3.032158347474478e-11,1.3429682632199338e-11,5.753855389145465e-12,
   2.3661054922571393e-12,1.0639612947203364e-12,4.733204079049079e-13,
   2.103715798233944e-13,1.0203094755533884e-13,5.931904661118695e-14]


data_shot['bounds'] = []
data_shot['bounds'].append([(hi_24[i], lo_24[i]) for i in range(len(masking_depth))])
data_shot['bounds'].append([(hi_36[i], lo_36[i]) for i in range(len(masking_depth))])
data_shot['bounds'].append([(hi_45[i], lo_45[i]) for i in range(len(masking_depth))])

def get_ebl_spectrum():
    """
    Plot the mean EBL [nW/m^2/sr] as a function of observed wavelength [microns].

    Returns
    -------
    Tuple containing the (mean EBL intensity, + error, - error). Note that the
    +/- errors are returned as positive numbers.
    """
    _waves = []
    _mean = []
    _err = []
    for i, band in enumerate(bands):
        if band not in mean_ebl:
            continue

        _waves.append(waves[i])
        _mean.append(mean_ebl[band][-1][0])
        # Return as (mean, + err, | - err |)
        _err.append((mean_ebl[band][-1][1], -mean_ebl[band][-1][2]))

    return _waves, _mean, _err

def get_ebl_shot_power(use_bounds=True):
    if use_bounds:
        return data_shot['waves'], masking_depth, data_shot['bounds']
    else:
        return data_shot['waves'], masking_depth, data_shot['mean']
